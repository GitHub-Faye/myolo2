# YOLOv12-CustomPose ðŸš€, AGPL-3.0 license
# YOLOv12-CustomPose model for pose detection and keypoint localization
# Based on YOLOv12 architecture

# Parameters
nc: 1  # number of classes
kpt_shape: [5, 3]  # number of keypoints, number of dims (2 for x,y or 3 for x,y,visible)
scales: # model compound scaling constants, i.e. 'model=yolov12n-custompose.yaml' will call yolov12-custompose.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.50, 0.25, 1024] # nano model
  s: [0.50, 0.50, 1024] # small model
  m: [0.50, 1.00, 512]  # medium model
  l: [1.00, 1.00, 512]  # large model
  x: [1.00, 1.50, 512]  # xlarge model

# YOLO12-custompose backbone (same as YOLOv12)
backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv,  [64, 3, 2]] # 0-P1/2
  - [-1, 1, Conv,  [128, 3, 2, 1, 2]] # 1-P2/4
  - [-1, 2, C3k2,  [256, False, 0.25]]
  - [-1, 1, Conv,  [256, 3, 2, 1, 4]] # 3-P3/8
  - [-1, 2, C3k2,  [512, False, 0.25]]
  - [-1, 1, Conv,  [512, 3, 2]] # 5-P4/16
  - [-1, 4, A2C2f, [512, True, 4]]
  - [-1, 1, Conv,  [1024, 3, 2]] # 7-P5/32
  - [-1, 4, A2C2f, [1024, True, 1]] # 8

# YOLO12-custompose head (modified from YOLOv12 to use Pose instead of Detect)
head:
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]
  - [[-1, 6], 1, Concat, [1]] # cat backbone P4
  - [-1, 2, A2C2f, [512, False, -1]] # 11

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]
  - [[-1, 4], 1, Concat, [1]] # cat backbone P3
  - [-1, 2, A2C2f, [256, False, -1]] # 14

  - [-1, 1, Conv, [256, 3, 2]]
  - [[-1, 11], 1, Concat, [1]] # cat head P4
  - [-1, 2, A2C2f, [512, False, -1]] # 17

  - [-1, 1, Conv, [512, 3, 2]]
  - [[-1, 8], 1, Concat, [1]] # cat head P5
  - [-1, 2, C3k2, [1024, True]] # 20 (P5/32-large)

  - [[14, 17, 20], 1, CustomPoseModel, [nc, kpt_shape]] # Pose(P3, P4, P5) 